# Generated from Asistencia.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO

def serializedATN():
    return [
        4,0,13,151,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,1,
        0,1,0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,
        3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,
        5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,4,6,75,
        8,6,11,6,12,6,76,1,6,1,6,5,6,81,8,6,10,6,12,6,84,9,6,1,6,1,6,1,7,
        1,7,5,7,90,8,7,10,7,12,7,93,9,7,1,7,1,7,1,8,4,8,98,8,8,11,8,12,8,
        99,1,8,1,8,4,8,104,8,8,11,8,12,8,105,3,8,108,8,8,1,9,1,9,1,9,1,9,
        1,9,1,9,1,9,1,9,1,9,3,9,119,8,9,1,10,1,10,1,10,1,10,1,10,3,10,126,
        8,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,
        1,11,1,11,1,11,3,11,143,8,11,1,12,4,12,146,8,12,11,12,12,12,147,
        1,12,1,12,0,0,13,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,
        11,23,12,25,13,1,0,5,1,0,48,57,2,0,10,10,13,13,3,0,10,10,13,13,34,
        34,2,0,60,60,62,62,3,0,9,10,13,13,32,32,164,0,1,1,0,0,0,0,3,1,0,
        0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,
        0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,
        0,0,25,1,0,0,0,1,27,1,0,0,0,3,32,1,0,0,0,5,34,1,0,0,0,7,41,1,0,0,
        0,9,48,1,0,0,0,11,58,1,0,0,0,13,64,1,0,0,0,15,87,1,0,0,0,17,97,1,
        0,0,0,19,118,1,0,0,0,21,125,1,0,0,0,23,142,1,0,0,0,25,145,1,0,0,
        0,27,28,5,108,0,0,28,29,5,111,0,0,29,30,5,97,0,0,30,31,5,100,0,0,
        31,2,1,0,0,0,32,33,5,59,0,0,33,4,1,0,0,0,34,35,5,102,0,0,35,36,5,
        105,0,0,36,37,5,108,0,0,37,38,5,116,0,0,38,39,5,101,0,0,39,40,5,
        114,0,0,40,6,1,0,0,0,41,42,5,99,0,0,42,43,5,111,0,0,43,44,5,108,
        0,0,44,45,5,117,0,0,45,46,5,109,0,0,46,47,5,110,0,0,47,8,1,0,0,0,
        48,49,5,97,0,0,49,50,5,103,0,0,50,51,5,103,0,0,51,52,5,114,0,0,52,
        53,5,101,0,0,53,54,5,103,0,0,54,55,5,97,0,0,55,56,5,116,0,0,56,57,
        5,101,0,0,57,10,1,0,0,0,58,59,5,112,0,0,59,60,5,114,0,0,60,61,5,
        105,0,0,61,62,5,110,0,0,62,63,5,116,0,0,63,12,1,0,0,0,64,65,5,35,
        0,0,65,66,5,32,0,0,66,67,5,83,0,0,67,68,5,99,0,0,68,69,5,114,0,0,
        69,70,5,105,0,0,70,71,5,112,0,0,71,72,5,116,0,0,72,74,1,0,0,0,73,
        75,7,0,0,0,74,73,1,0,0,0,75,76,1,0,0,0,76,74,1,0,0,0,76,77,1,0,0,
        0,77,78,1,0,0,0,78,82,5,58,0,0,79,81,8,1,0,0,80,79,1,0,0,0,81,84,
        1,0,0,0,82,80,1,0,0,0,82,83,1,0,0,0,83,85,1,0,0,0,84,82,1,0,0,0,
        85,86,6,6,0,0,86,14,1,0,0,0,87,91,5,34,0,0,88,90,8,2,0,0,89,88,1,
        0,0,0,90,93,1,0,0,0,91,89,1,0,0,0,91,92,1,0,0,0,92,94,1,0,0,0,93,
        91,1,0,0,0,94,95,5,34,0,0,95,16,1,0,0,0,96,98,7,0,0,0,97,96,1,0,
        0,0,98,99,1,0,0,0,99,97,1,0,0,0,99,100,1,0,0,0,100,107,1,0,0,0,101,
        103,5,46,0,0,102,104,7,0,0,0,103,102,1,0,0,0,104,105,1,0,0,0,105,
        103,1,0,0,0,105,106,1,0,0,0,106,108,1,0,0,0,107,101,1,0,0,0,107,
        108,1,0,0,0,108,18,1,0,0,0,109,110,5,62,0,0,110,119,5,61,0,0,111,
        112,5,60,0,0,112,119,5,61,0,0,113,119,7,3,0,0,114,115,5,61,0,0,115,
        119,5,61,0,0,116,117,5,33,0,0,117,119,5,61,0,0,118,109,1,0,0,0,118,
        111,1,0,0,0,118,113,1,0,0,0,118,114,1,0,0,0,118,116,1,0,0,0,119,
        20,1,0,0,0,120,121,5,65,0,0,121,122,5,78,0,0,122,126,5,68,0,0,123,
        124,5,79,0,0,124,126,5,82,0,0,125,120,1,0,0,0,125,123,1,0,0,0,126,
        22,1,0,0,0,127,128,5,99,0,0,128,129,5,111,0,0,129,130,5,117,0,0,
        130,131,5,110,0,0,131,143,5,116,0,0,132,133,5,115,0,0,133,134,5,
        117,0,0,134,143,5,109,0,0,135,136,5,97,0,0,136,137,5,118,0,0,137,
        138,5,101,0,0,138,139,5,114,0,0,139,140,5,97,0,0,140,141,5,103,0,
        0,141,143,5,101,0,0,142,127,1,0,0,0,142,132,1,0,0,0,142,135,1,0,
        0,0,143,24,1,0,0,0,144,146,7,4,0,0,145,144,1,0,0,0,146,147,1,0,0,
        0,147,145,1,0,0,0,147,148,1,0,0,0,148,149,1,0,0,0,149,150,6,12,0,
        0,150,26,1,0,0,0,11,0,76,82,91,99,105,107,118,125,142,147,1,6,0,
        0
    ]

class AsistenciaLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    SCRIPT_COMMENT = 7
    STRING = 8
    NUMBER = 9
    OPERATOR = 10
    LOGICAL_OP = 11
    AGG_OP = 12
    WS = 13

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'load'", "';'", "'filter'", "'column'", "'aggregate'", "'print'" ]

    symbolicNames = [ "<INVALID>",
            "SCRIPT_COMMENT", "STRING", "NUMBER", "OPERATOR", "LOGICAL_OP", 
            "AGG_OP", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "SCRIPT_COMMENT", 
                  "STRING", "NUMBER", "OPERATOR", "LOGICAL_OP", "AGG_OP", 
                  "WS" ]

    grammarFileName = "Asistencia.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


